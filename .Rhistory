install.packages("FactoMineR")
install.packages("factoextra")
devtools::install_github("kassambara/factoextra")
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
library("FactoMineR")
library("factoextra")
?PCA
library("FactoMineR")
library("factoextra")
?PCA
data("USArrests")
head(USArrests,3)
head(USArrests,6)
head(USArrests,45)
head(USArrests,145)
?USArrests
head(USArrests$Murder)
USArrests[,1]
USArrests[,'Murder']
data("decathlon2")
View(USArrests)
force(decathlon2)
View(decathlon2)
head(decathlon2)
View(decathlon2)
View(decathlon2)
data("USArrests")
head(USArrests,145)
head(USArrests$Murder)
USArrests[,1]
USArrests[,'Murder']
data("decathlon2")
head(decathlon2)
# Chapter 4 PCA Basics
# Pas 1) Setam active individuals
decathlo2.active <- decathlon2[1:23,1:10]
View(decathlo2.active)
data("USArrests")
head(USArrests,145)
head(USArrests$Murder)
USArrests[,1]
USArrests[,'Murder']
data("decathlon2")
head(decathlon2)
# Chapter 4 PCA Basics
# Pas 1) Setam active individuals
decathlo2.active <- decathlon2[1:23,1:10]
head(decathlon2.active[, 1:6], 4)
head(decathlon2.active[, 1:6], 4)
data("USArrests")
head(USArrests,145)
head(USArrests$Murder)
USArrests[,1]
USArrests[,'Murder']
data("decathlon2")
head(decathlon2)
# Chapter 4 PCA Basics
# Pas 1) Setam active individuals
decathlon2.active <- decathlon2[1:23,1:10]
head(decathlon2.active[, 1:6], 4)
View(decathlo2.active)
View(decathlo2.active)
delete.decathlo2.active
View(decathlo2.active)
View(decathlo2.active)
remove(decathlo2.active)
head(decathlon2.active[, 1:6], 4)
View(decathlon2.active)
View(decathlon2)
res.pca <- PCA(decathlon2.active, graph = FALSE)
View(res.pca)
print(res.pca)
library("factoextra")
library("FactoMineR")
library("factoextra")
install.packages(c("FactoMineR", "factoextra"))
install.packages(c("FactoMineR", "factoextra"))
library("FactoMineR")
library("factoextra")
data(housetacks)
data(housetasks)
data(housetasks)
data(housetasks)
data("housetasks")
data("house")
install.packages(c("factoextra"))
devtools::install_github("kassambara/factoextra")
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
devtools::install_github("kassambara/factoextra")
library("FactoMineR")
library("factoextra")
data(housetasks)
data("USArrests")
force(USArrests)
library(FactoMineR)
data("housetasks")
# install.packages("devtools")
devtools::install_github("kassambara/factoextra")
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
library("factoextra")
# ramas la pagina 46
data(housetasks)
# ramas la pagina 46
data("housetasks")
library(FactoMineR)
data(housetasks)
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
install.packages("factoextra")
data("USArrests")
data(housetasks)
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
install.packages('data.table', dependencies = TRUE)
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
remove.packages(c("ggplot2", "data.table"))
install.packages("FactoMineR")
install.packages("factoextra")
datasets::housetasks
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("kassambara/factoextra")
devtools::install_github("kassambara/factoextra")
devtools::install_github("kassambara/factoextra")
install.packages("devtools")
install.packages("factoextra")
library("FactoMineR")
library("factoextra")
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
install.packages("factoextra")
data(housetasks)
library("factoextra")
data(housetasks)
force(housetasks)
View(housetasks)
View(housetasks)
library("gplots")
install.packages("gplots")
library("gplots")
dt <- as.table(as.matrix(housetasks))
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
res.ca <- CA(housetasks, graph = FALSE)
View(res.ca)
print(res.ca)
View(res.ca)
#eigenvalues = valori proprii
get_eigenvalue(res.ca)
fviz_eig(res.
fviz_eig(res.ca)
fviz_eig(res.ca)
get_ca_row(res.ca)
get_ca_row(res.ca), get_ca_col(res.ca)
get_ca_row(res.ca)
get_ca_col(res.ca)
fviz_ca_row(res.ca)
fviz_ca_col(res.ca)
summary(res.ca)
eig.val
eig.val <- get_eigenvalue(res.ca)
eig.val
fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 50))
View(housetasks)
row <- get_ca_row(res.ca)
head(row$coord)
head(row$cos2)
head(row$contrib)
View(housetasks)
library(FactoMineR)
data(JO)
View(JO)
View(JO)
View(JO)
View(JO)
knitr::opts_chunk$set(echo = FALSE)
library("ggplot2")
library(factoextra)
library(FactoMineR)
library(knitr)
library(kableExtra)
data("JO")
dt <- JO[1:24, 1:10]
kable(dt)
knitr::opts_chunk$set(echo = FALSE)
library("ggplot2")
library(factoextra)
library(FactoMineR)
library(knitr)
library(kableExtra)
data("JO")
dt <- JO[1:24, 1:10]
kable(dt)
foo <- c(1.1, 2, 3.5, 3.9, 4.2)
bar <- c(2, 2.2, -1.3, 0, 0.2)
plot(foo, bar
plot(foo,bar)
foo <- c(1.1, 2, 3.5, 3.9, 4.2)
bar <- c(2, 2.2, -1.3, 0, 0.2)
plot(foo,bar)
head(mtcars)
version
aaaaaa
foo <- c(1.1, 2, 3.5, 3.9, 4.2)
foo <- c(1.1, 2, 3.5, 3.9, 4.2)
aaaaaa
bar <- c(2, 2.2, -1.3, 0, 0.2)
plot(foo,bar)
setwd("F:/Master/Cursuri/An II/Semestrul II/Data Visualization/Proiect Data Visualization")
use_python("C:/Users/DCypherMedia/AppData/Local/Programs/Python/Python39", required = TRUE)
library(reticulate)
use_python("C:/Users/DCypherMedia/AppData/Local/Programs/Python/Python39", required = TRUE)
repl_python()
quit
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
repl_python()
exit
plt <- import('matplotlib.pyplot')
sns <- import('seaborn')
pd <- import('pandas')
np <- import('numpy')
plt$style$use('ggplot')
df = pd$read_csv("top250-00-19.csv")
x = head(df)
sns$countplot(x='Position',data=df)
plt$xticks(rotation=90)
plt$show()
df$Season
df$Season$value_counts()
data=pd$DataFrame(df$Season$value_counts())
df = as.data.frame(df)
df$Season$value_counts()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts())$reset_index()$sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
df$Season$value_counts()
value_counts(df$Season)
View(df)
df = pd$read_csv("top250-00-19.csv")
x = head(df)
sns$countplot(x='Position',data=df)
plt$xticks(rotation=90)
plt$show()
#Center Foward(CF) traded the most followed
#by Center Back and multiple midfielder positions. The Center positions are traded the most!
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts())$reset_index()$sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
df$head()
DataFrame(df$Season$value_counts())
data=pd$DataFrame(df$Season$value_counts())$reset_index()$sort_values('index')
data=pd$DataFrame(df$Season.value_counts())$reset_index()$sort_values('index')
sns$countplot(x='Position',data=df)
df$Season.value_counts()
df$Season.value_counts
df$Season.value
data=pd$DataFrame(df$Season)$reset_index()$sort_values('index')
data=pd$DataFrame(df$Season$value_counts())$reset_index()$sort_values('index')
pd$DataFrame(df$Season$value_counts()).reset_index().sort_values('index')
repl_python()
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv("../input/top250-00-19.csv")
df = pd.read_csv("input/top250-00-19.csv")
df = pd.read_csv("top250-00-19.csv")
plt.style.use('ggplot')
sns.pointplot(x='index',y='Season',data=pd.DataFrame(df.Season.value_counts()).reset_index().sort_values('index'))
plt.xticks(rotation=90)
plt.xlabel('Season')
plt.ylabel('Number of Trade')
plt.show()
sns.pointplot(x='index',y='Season',data=pd.DataFrame(df.Season.value_counts()).reset_index().sort_values('index'))
plt.xticks(rotation=90)
plt.xlabel('Season')
plt.ylabel('Number of Trade')
plt.show()
setwd("F:/Master/Cursuri/An II/Semestrul II/Data Visualization/Proiect Data Visualization")
transfersData <- read.csv(file = 'top250-00-19.csv')
library(ggplot2)
install.packages('reticulate')
install.packages("reticulate")
use_python("C:/Users/DCypherMedia/AppData/Local/Programs/Python/Python39", required = TRUE)
library(reticulate)
use_python("C:/Users/DCypherMedia/AppData/Local/Programs/Python/Python39", required = TRUE)
reticulate::py_config()
plt <- import('matplotlib.pyplot')
sns <- import('seaborn')
pd <- import('pandas')
np <- import('numpy')
plt$style$use('ggplot')
df = pd$read_csv("top250-00-19.csv")
sns$countplot(x='Position',data=df)
plt$xticks(rotation=90)
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
library(reticulate)
reticulate::py_config()
df = pd$read_csv("top250-00-19.csv")
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns.pointplot(x='index',y='Season',data=pd.DataFrame(df.Season.value_counts()),reset_index(),sort_values('index'))
plt.xticks(rotation=90)
plt.xlabel('Season')
plt.ylabel('Number of Trade')
plt.show()
sns.pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt.xticks(rotation=90)
plt.xlabel('Season')
plt.ylabel('Number of Trade')
plt.show()
sns.pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns.pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
league_from = data$groupby(['League_from'])['Transfer_fee'].sum()
league_from = df$group_by(League_from)["Transfer_fee"]$sum()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
league_from <- data$groupby(League_from)['Transfer_fee'].sum()
league_from <- data$groupby(League_from)['Transfer_fee']$sum()
league_from <- data$groupby('League_from')['Transfer_fee']$sum()
league_from <- data$groupby('League_from')['Transfer_fee']$sum()
league_from = data$groupby('League_from')['Transfer_fee']$sum()
league_from = data$groupby('League_from')['Transfer_fee']
league_from = data$groupby('League_from')['Transfer_fee'].sum()
league_from = data$groupby('League_from')
league_from = data$groupby('League_from')['Transfer_fee'].sum()
top5sell_league = league_from$sort_values(ascending=False).head(5)
top5sell_league = top5sell_league/1000000
top5sell_league.head()
league_from <- data$groupby('League_from')['Transfer_fee'].sum()
top5sell_league <- league_from$sort_values(ascending=False).head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league.head()
league_from <- data$groupby('League_from')['Transfer_fee'].sum()
top5sell_league <- league_from$sort_values(ascending=False).head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
league_from <- data$groupby('League_from')['Transfer_fee']$sum()
top5sell_league <- league_from$sort_values(ascending=False)$head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
league_from <- data$groupby('League_from')['Transfer_fee']$sum()
league_from = data$groupby('League_from')['Transfer_fee']$sum()
top5sell_league = league_from$sort_values(ascending=False)$head(5)
top5sell_league = top5sell_league/1000000
top5sell_league$head()
league_from = data$groupby('League_from')['Transfer_fee']$sum()
top5sell_league = league_from$sort_values(ascending=False)$head(5)
top5sell_league = top5sell_league/1000000
top5sell_league$head()
league_from = data$groupby('League_from')['Transfer_fee']$sum()
top5sell_league = league_from$sort_values(ascending=False)$head(5)
top5sell_league = top5sell_league/1000000
top5sell_league$head()
sns$countplot(x='Position',data=df)
plt$xticks(rotation=90)
plt$show()
sns$countplot(x='Position',data=df)
plt$xticks(rotation=90)
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
league_from <- data$groupby('League_from')['Transfer_fee']$sum()
top5sell_league <- league_from$sort_values(ascending=False)$head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
top5sell_league <- data$sort_values(ascending=False)$head(5)
top5sell_league <- data$sort_values(ascending=False)$head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
top5sell_league <- df$sort_values(ascending=False)$head(5)
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
x <- df$head()
x <- df$head
x <- df
x <- df.head()
x <- df$head()
x <- df$head()
x = df$head()
N <- 50L
x <- np$random$rand(N)
head <- head(df)
sns$pointplot(x='index',y='Season',data=pd$DataFrame(df$Season$value_counts()),reset_index(),sort_values('index'))
plt$xticks(rotation=90)
plt$xlabel('Season')
plt$ylabel('Number of Trade')
plt$show()
df$sort_values(ascending=False)
top5sell_league <- df$sort_values(ascending=False)
head <- py$df$head()
league_from <- df$groupby('League_from')['Transfer_fee']$sum()
top5sell_league <- head(df$sort_values(ascending=False))
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
top5sell_league <- head(df$sort_values(ascending=False))
league_from <- df$groupby('League_from')['Transfer_fee']$sum()
top5sell_league <- head(league_from$sort_values(ascending=False))
top5sell_league <- top5sell_league/1000000
top5sell_league$head()
df = pd$read_csv("top250-00-19.csv")
head = py$df$head()
head = df$head()
head = df$head
head = df$head
head = df$head
head = df.head()
View(df)
head = pd$df$head()
head = np$df$head()
head = py$df$head()
head <- py$df$head()
py$df
repl_python()
data = pd.read_csv('top250-00-19.csv')
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use('ggplot')
data = pd.read_csv('top250-00-19.csv')
data.head()
league_from = data.groupby(['League_from'])['Transfer_fee'].sum()
top5sell_league = league_from.sort_values(ascending=False).head(5)
top5sell_league = top5sell_league/1000000
top5sell_league.head()
fig, ax = plt.subplots(figsize=(18,6))
ax.bar(top5sell_league.index, top5sell_league.values, color='orange')
ax.set_ylabel("$ millions", color='navy')
ax.set_yticklabels(labels=[i for i in range(0,8000, 1000)], color='navy')
ax.set_xticklabels(labels=top5sell_league.index, color='navy')
league_to = data.groupby(['League_to'])['Transfer_fee'].sum()
top5buy_league = league_to.sort_values(ascending=False).head(5)
top5buy_league = top5buy_league/1000000
top5buy_league.head()
ax.show()
ax
View(ax)
View(ax)
View(ax)
diff_league = top5sell_league - top5buy_league
diff_league = diff_league.sort_values(ascending=False)
diff_league.head()
